{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ajayl\\\\Desktop\\\\repos\\\\bet-you-dont-know\\\\client\\\\src\\\\components\\\\Room\\\\HowToPlay\\\\HowToPlay.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport styles from \"./HowToPlay.module.scss\";\nimport { Button } from \"react-bootstrap-buttons\";\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\nimport { useState } from \"react\";\nimport Collapsible from \"react-collapsible\";\n\nvar HowToPlay = function HowToPlay() {\n  _s();\n\n  var _useState = useState(false),\n      showRules = _useState[0],\n      setShowRules = _useState[1];\n\n  var onButtonClick = function onButtonClick() {\n    setShowRules(!showRules);\n  };\n\n  var _useState2 = useState([false, false, false]),\n      openStatuses = _useState2[0],\n      setOpenStatuses = _useState2[1];\n\n  var trigger = function trigger(triggerName, index) {\n    var onTriggerClick = function onTriggerClick() {\n      var shallowCopy = _toConsumableArray(openStatuses);\n\n      shallowCopy[index] = !shallowCopy[index];\n      setOpenStatuses(shallowCopy);\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.trigger,\n      onClick: function onClick() {\n        return onTriggerClick();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.triggerTitle,\n        children: triggerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, _this), openStatuses[index] ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/up-arrow.svg\",\n        alt: \"close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/down-arrow.svg\",\n        alt: \"open\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [showRules && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rulesContainer,\n      children: [/*#__PURE__*/_jsxDEV(Collapsible, {\n        trigger: trigger(\"Rules\", 0),\n        classParentString: styles.collapsible,\n        contentInnerClassName: styles.content,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Players take turns answering trivia questions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"On your turn:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: styles.orderedList,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Answer the trivia question displayed. (multiple choice)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"All other players can place bets hoping that you answered incorrectly.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If their prediction was right (you got the question wrong), you will have to pay however much they betted on you.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"However, if you proved them wrong and answered correctly, you will earn $1000 AND everyone who didn't believe in you will have to pay their bets to you!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Collapsible, {\n        trigger: trigger(\"Example\", 1),\n        classParentString: styles.collapsible,\n        contentInnerClassName: styles.content,\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: styles.orderedList,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"It's Bob's turn to answer:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Bob answers the question: What is 1+1? Bob bluffs that he can't do math.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"John believes that Bob is indeed bad at math and bets $500 that Bob will answer incorrectly.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"No way! Bob guessed correctly and won $1000. Additionally, because John made an incorrect prediction, $500 is deducted from his balance and given to Bob!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Collapsible, {\n        trigger: trigger(\"Tips\", 2),\n        classParentString: styles.collapsible,\n        contentInnerClassName: styles.content,\n        children: /*#__PURE__*/_jsxDEV(\"ol\", {\n          className: styles.orderedList,\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If you have no idea as to what the answer is, try bluffing and you can potentially lose $0 because nobody would risk placing any bets!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"If you know what the answer is for sure, try bluffing and you can potentially earn much more money from other players' bets!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Always choose an answer on your turn: you have a 25% of answering correctly!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Try not to bet all in - you can't place any more bets once your balance dips below zero.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      btnStyle: \"secondary\",\n      onClick: function onClick() {\n        return onButtonClick();\n      },\n      className: styles.howToPlayButton,\n      children: \"How To Play\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(HowToPlay, \"oIISxPZDJKjEv3joXg0XLA8QLpg=\");\n\n_c = HowToPlay;\nexport default HowToPlay;\n\nvar _c;\n\n$RefreshReg$(_c, \"HowToPlay\");","map":{"version":3,"sources":["C:/Users/ajayl/Desktop/repos/bet-you-dont-know/client/src/components/Room/HowToPlay/HowToPlay.tsx"],"names":["styles","Button","useState","Collapsible","HowToPlay","showRules","setShowRules","onButtonClick","openStatuses","setOpenStatuses","trigger","triggerName","index","onTriggerClick","shallowCopy","triggerTitle","container","rulesContainer","collapsible","content","orderedList","howToPlayButton"],"mappings":"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","sourcesContent":["import styles from \"./HowToPlay.module.scss\";\r\nimport { Button } from \"react-bootstrap-buttons\";\r\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\r\nimport { useState } from \"react\";\r\nimport Collapsible from \"react-collapsible\";\r\n\r\nconst HowToPlay: React.FC = () => {\r\n  const [showRules, setShowRules] = useState(false);\r\n  const onButtonClick = () => {\r\n    setShowRules(!showRules);\r\n  };\r\n\r\n  const [openStatuses, setOpenStatuses] = useState<Array<boolean>>([\r\n    false,\r\n    false,\r\n    false,\r\n  ]);\r\n  const trigger = (triggerName: string, index: number) => {\r\n    const onTriggerClick = () => {\r\n      let shallowCopy = [...openStatuses];\r\n      shallowCopy[index] = !shallowCopy[index];\r\n      setOpenStatuses(shallowCopy);\r\n    };\r\n    return (\r\n      <div className={styles.trigger} onClick={() => onTriggerClick()}>\r\n        <div className={styles.triggerTitle}>{triggerName}</div>\r\n        {openStatuses[index] ? (\r\n          <img src=\"/img/up-arrow.svg\" alt=\"close\" />\r\n        ) : (\r\n          <img src=\"/img/down-arrow.svg\" alt=\"open\" />\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n  return (\r\n    <div className={styles.container}>\r\n      {showRules && (\r\n        <div className={styles.rulesContainer}>\r\n          <Collapsible\r\n            trigger={trigger(\"Rules\", 0)}\r\n            classParentString={styles.collapsible}\r\n            contentInnerClassName={styles.content}\r\n          >\r\n            <p>Players take turns answering trivia questions.</p>\r\n            <p>On your turn:</p>\r\n            <ol className={styles.orderedList}>\r\n              <li>Answer the trivia question displayed. (multiple choice)</li>\r\n              <li>\r\n                All other players can place bets hoping that you answered\r\n                incorrectly.\r\n              </li>\r\n              <li>\r\n                If their prediction was right (you got the question wrong), you\r\n                will have to pay however much they betted on you.\r\n              </li>\r\n              <li>\r\n                However, if you proved them wrong and answered correctly, you\r\n                will earn $1000 AND everyone who didn't believe in you will have\r\n                to pay their bets to you!\r\n              </li>\r\n            </ol>\r\n          </Collapsible>\r\n\r\n          <Collapsible\r\n            trigger={trigger(\"Example\", 1)}\r\n            classParentString={styles.collapsible}\r\n            contentInnerClassName={styles.content}\r\n          >\r\n            <ol className={styles.orderedList}>\r\n              <p>It's Bob's turn to answer:</p>\r\n              <li>\r\n                Bob answers the question: What is 1+1? Bob bluffs that he can't\r\n                do math.\r\n              </li>\r\n              <li>\r\n                John believes that Bob is indeed bad at math and bets $500 that\r\n                Bob will answer incorrectly.\r\n              </li>\r\n              <li>\r\n                No way! Bob guessed correctly and won $1000. Additionally,\r\n                because John made an incorrect prediction, $500 is deducted from\r\n                his balance and given to Bob!\r\n              </li>\r\n            </ol>\r\n          </Collapsible>\r\n          <Collapsible\r\n            trigger={trigger(\"Tips\", 2)}\r\n            classParentString={styles.collapsible}\r\n            contentInnerClassName={styles.content}\r\n          >\r\n            <ol className={styles.orderedList}>\r\n              <li>\r\n                If you have no idea as to what the answer is, try bluffing and\r\n                you can potentially lose $0 because nobody would risk placing\r\n                any bets!\r\n              </li>\r\n              <li>\r\n                If you know what the answer is for sure, try bluffing and you\r\n                can potentially earn much more money from other players' bets!\r\n              </li>\r\n              <li>\r\n                Always choose an answer on your turn: you have a 25% of\r\n                answering correctly!\r\n              </li>\r\n              <li>\r\n                Try not to bet all in - you can't place any more bets once your\r\n                balance dips below zero.\r\n              </li>\r\n            </ol>\r\n          </Collapsible>\r\n        </div>\r\n      )}\r\n      <Button\r\n        btnStyle=\"secondary\"\r\n        onClick={() => onButtonClick()}\r\n        className={styles.howToPlayButton}\r\n      >\r\n        How To Play\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HowToPlay;\r\n"]},"metadata":{},"sourceType":"module"}