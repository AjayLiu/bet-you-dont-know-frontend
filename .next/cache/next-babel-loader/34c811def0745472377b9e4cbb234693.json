{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ajayl\\\\Desktop\\\\repos\\\\bet-you-dont-know\\\\client\\\\src\\\\components\\\\Room\\\\WaitingScreen\\\\WaitingScreen.tsx\";\nimport SocketContext from \"@context/SocketContext\";\nimport { useState, useContext, useEffect } from \"react\";\nimport Switch from \"react-switch\";\nimport styles from \"./WaitingScreen.module.scss\";\nimport { Button } from \"react-bootstrap-buttons\";\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\nimport PlayerList from \"./PlayerList/PlayerList\";\n\nconst WaitingScreen = props => {\n  const socket = useContext(SocketContext);\n  const {\n    0: isReady,\n    1: setIsReady\n  } = useState(false);\n\n  const onReadyPress = () => {\n    socket.emit(\"setReady\", props.me, !isReady);\n    setIsReady(!isReady);\n  };\n\n  const onStartPress = () => {\n    socket.emit(\"startGame\", props.lobby.id);\n  };\n\n  const {\n    0: isSpectator,\n    1: setIsSpectator\n  } = useState(false);\n\n  const handleSpectatorChange = () => {\n    socket.emit(\"setIsSpectator\", props.me, !isSpectator);\n    setIsSpectator(!isSpectator);\n  };\n\n  useEffect(() => {\n    if (props.me.isSpectator) {\n      setIsSpectator(props.me.isSpectator);\n    }\n  }, [props.me.isSpectator]);\n\n  const spectatorSwitch = /*#__PURE__*/_jsxDEV(\"label\", {\n    htmlFor: \"spectator or not spectator\",\n    className: styles.settingsRow,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Spectator?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      onChange: () => handleSpectatorChange(),\n      checked: isSpectator\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n\n  const {\n    0: isPublicLobby,\n    1: setIsPublicLobby\n  } = useState(false);\n\n  const handlePublicChange = () => {\n    if (props.me.isLeader) {\n      socket.emit(\"setLobbyPublic\", props.me.lobbyID, !isPublicLobby);\n      setIsPublicLobby(!isPublicLobby);\n    }\n  };\n\n  const publicSwitch = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"public or private lobby\",\n      className: styles.settingsRow,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Make lobby public\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        onChange: () => handlePublicChange(),\n        checked: isPublicLobby\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n\n  const everyoneHasReadied = props.lobby.players && props.lobby.players.length >= 2 && !props.lobby.players.find(user => !user.isReady);\n\n  const readyElem = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.readyContainer,\n    children: props.lobby.players && props.lobby.players.length >= 2 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!props.me.isSpectator && /*#__PURE__*/_jsxDEV(Button, {\n        btnStyle: isReady ? \"danger\" : \"primary\",\n        onClick: () => onReadyPress(),\n        children: isReady ? \"Click to Unready\" : \"Click to Ready\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.waitingFor,\n        children: everyoneHasReadied ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"orangered\"\n          },\n          children: \"Waiting for lobby leader to start the game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: \"orange\"\n          },\n          children: \"Waiting for all players to ready up...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Waiting for \", 2 - props.lobby.players.length, \" more players to join\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n\n  const startElem = props.me.isLeader && everyoneHasReadied && /*#__PURE__*/_jsxDEV(Button, {\n    btnStyle: \"primary\",\n    className: styles.startButton,\n    onClick: () => onStartPress(),\n    children: \"Start Game!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n\n  const {\n    0: totalRounds,\n    1: setTotalRounds\n  } = useState(0);\n\n  const trySetRounds = num => {\n    try {\n      // clamp the rounds between props.lobby.players.length and 10 x that number\n      let newNum = Math.min(Math.max(num, props.lobby.players.length), props.lobby.players.length * 10);\n      setTotalRounds(newNum);\n      socket.emit(\"setTotalRounds\", props.lobby.id, newNum);\n    } catch (err) {\n      console.error(err);\n    }\n  }; // when the lobby resizes, make sure to update the totalRounds setting\n\n\n  useEffect(() => {\n    if (props.lobby.players != undefined) {\n      trySetRounds(props.lobby.players.length * 2);\n    }\n  }, [props.lobby.players.length]);\n\n  const handleRoundsChange = e => {\n    trySetRounds(parseInt(e.target.value));\n  };\n\n  const roundsElem = props.lobby.players && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.settingsRow,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"rounds\",\n      children: \"Number of rounds in total\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: totalRounds,\n      min: props.lobby.players.length,\n      max: props.lobby.players.length * 10,\n      onChange: e => handleRoundsChange(e),\n      readOnly: !props.me.isLeader\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n\n  const forceStartButton = props.lobby.players && props.lobby.players.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.settingsRow,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"force start\",\n      children: \"Force Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      btnStyle: \"secondary\",\n      onClick: () => onStartPress(),\n      children: \"Force Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n\n  return props.me.hasSetName && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: props.lobby.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }, this), props.lobby.users && /*#__PURE__*/_jsxDEV(PlayerList, {\n      lobby: props.lobby,\n      me: props.me\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 31\n    }, this), readyElem, startElem, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.settings,\n      children: [props.me.isLeader && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.lobbySettings,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.label,\n          children: \"Lobby Settings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this), publicSwitch, roundsElem, forceStartButton]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.userSettings,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.label,\n          children: \"User Settings:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), spectatorSwitch]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 7\n  }, this);\n};\n\nexport default WaitingScreen;","map":{"version":3,"sources":["C:/Users/ajayl/Desktop/repos/bet-you-dont-know/client/src/components/Room/WaitingScreen/WaitingScreen.tsx"],"names":["SocketContext","useState","useContext","useEffect","Switch","styles","Button","PlayerList","WaitingScreen","props","socket","isReady","setIsReady","onReadyPress","emit","me","onStartPress","lobby","id","isSpectator","setIsSpectator","handleSpectatorChange","spectatorSwitch","settingsRow","isPublicLobby","setIsPublicLobby","handlePublicChange","isLeader","lobbyID","publicSwitch","everyoneHasReadied","players","length","find","user","readyElem","readyContainer","waitingFor","color","startElem","startButton","totalRounds","setTotalRounds","trySetRounds","num","newNum","Math","min","max","err","console","error","undefined","handleRoundsChange","e","parseInt","target","value","roundsElem","forceStartButton","hasSetName","container","name","users","settings","lobbySettings","label","userSettings"],"mappings":"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","sourcesContent":["import SocketContext from \"@context/SocketContext\";\r\nimport { Lobby, User } from \"@shared/types\";\r\nimport { useState, useContext, ChangeEvent, useEffect } from \"react\";\r\nimport Switch from \"react-switch\";\r\nimport styles from \"./WaitingScreen.module.scss\";\r\nimport { Button } from \"react-bootstrap-buttons\";\r\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\r\nimport PlayerList from \"./PlayerList/PlayerList\";\r\n\r\ninterface Props {\r\n  me: User;\r\n  lobby: Lobby;\r\n}\r\nconst WaitingScreen: React.FC<Props> = (props) => {\r\n  const socket = useContext(SocketContext);\r\n\r\n  const [isReady, setIsReady] = useState(false);\r\n  const onReadyPress = () => {\r\n    socket.emit(\"setReady\", props.me, !isReady);\r\n    setIsReady(!isReady);\r\n  };\r\n\r\n  const onStartPress = () => {\r\n    socket.emit(\"startGame\", props.lobby.id);\r\n  };\r\n\r\n  const [isSpectator, setIsSpectator] = useState(false);\r\n\r\n  const handleSpectatorChange = () => {\r\n    socket.emit(\"setIsSpectator\", props.me, !isSpectator);\r\n    setIsSpectator(!isSpectator);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (props.me.isSpectator) {\r\n      setIsSpectator(props.me.isSpectator);\r\n    }\r\n  }, [props.me.isSpectator]);\r\n  const spectatorSwitch = (\r\n    <label htmlFor=\"spectator or not spectator\" className={styles.settingsRow}>\r\n      <span>Spectator?</span>\r\n      <Switch onChange={() => handleSpectatorChange()} checked={isSpectator} />\r\n    </label>\r\n  );\r\n\r\n  const [isPublicLobby, setIsPublicLobby] = useState(false);\r\n\r\n  const handlePublicChange = () => {\r\n    if (props.me.isLeader) {\r\n      socket.emit(\"setLobbyPublic\", props.me.lobbyID, !isPublicLobby);\r\n      setIsPublicLobby(!isPublicLobby);\r\n    }\r\n  };\r\n  const publicSwitch = (\r\n    <div>\r\n      <label htmlFor=\"public or private lobby\" className={styles.settingsRow}>\r\n        <span>Make lobby public</span>\r\n        <Switch onChange={() => handlePublicChange()} checked={isPublicLobby} />\r\n      </label>\r\n    </div>\r\n  );\r\n\r\n  const everyoneHasReadied =\r\n    props.lobby.players &&\r\n    props.lobby.players.length >= 2 &&\r\n    !props.lobby.players.find((user) => !user.isReady);\r\n\r\n  const readyElem = (\r\n    <div className={styles.readyContainer}>\r\n      {props.lobby.players && props.lobby.players.length >= 2 ? (\r\n        <div>\r\n          {!props.me.isSpectator && (\r\n            <Button\r\n              btnStyle={isReady ? \"danger\" : \"primary\"}\r\n              onClick={() => onReadyPress()}\r\n            >\r\n              {isReady ? \"Click to Unready\" : \"Click to Ready\"}\r\n            </Button>\r\n          )}\r\n\r\n          <div className={styles.waitingFor}>\r\n            {everyoneHasReadied ? (\r\n              <div style={{ color: \"orangered\" }}>\r\n                Waiting for lobby leader to start the game...\r\n              </div>\r\n            ) : (\r\n              <div style={{ color: \"orange\" }}>\r\n                Waiting for all players to ready up...\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          Waiting for {2 - props.lobby.players.length} more players to join\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  const startElem = props.me.isLeader && everyoneHasReadied && (\r\n    <Button\r\n      btnStyle=\"primary\"\r\n      className={styles.startButton}\r\n      onClick={() => onStartPress()}\r\n    >\r\n      Start Game!\r\n    </Button>\r\n  );\r\n\r\n  const [totalRounds, setTotalRounds] = useState(0);\r\n\r\n  const trySetRounds = (num: number) => {\r\n    try {\r\n      // clamp the rounds between props.lobby.players.length and 10 x that number\r\n      let newNum = Math.min(\r\n        Math.max(num, props.lobby.players.length),\r\n        props.lobby.players.length * 10\r\n      );\r\n\r\n      setTotalRounds(newNum);\r\n\r\n      socket.emit(\"setTotalRounds\", props.lobby.id, newNum);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  // when the lobby resizes, make sure to update the totalRounds setting\r\n  useEffect(() => {\r\n    if (props.lobby.players != undefined) {\r\n      trySetRounds(props.lobby.players.length * 2);\r\n    }\r\n  }, [props.lobby.players.length]);\r\n\r\n  const handleRoundsChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    trySetRounds(parseInt(e.target.value));\r\n  };\r\n\r\n  const roundsElem = props.lobby.players && (\r\n    <div className={styles.settingsRow}>\r\n      <label htmlFor=\"rounds\">Number of rounds in total</label>\r\n      <input\r\n        type=\"number\"\r\n        value={totalRounds}\r\n        min={props.lobby.players.length}\r\n        max={props.lobby.players.length * 10}\r\n        onChange={(e) => handleRoundsChange(e)}\r\n        readOnly={!props.me.isLeader}\r\n      />\r\n    </div>\r\n  );\r\n\r\n  const forceStartButton = props.lobby.players &&\r\n    props.lobby.players.length > 1 && (\r\n      <div className={styles.settingsRow}>\r\n        <label htmlFor=\"force start\">Force Start Game</label>\r\n        <Button btnStyle={\"secondary\"} onClick={() => onStartPress()}>\r\n          Force Start Game\r\n        </Button>\r\n      </div>\r\n    );\r\n\r\n  return (\r\n    props.me.hasSetName && (\r\n      <div className={styles.container}>\r\n        <h2>{props.lobby.name}</h2>\r\n        {props.lobby.users && <PlayerList lobby={props.lobby} me={props.me} />}\r\n        {readyElem}\r\n        {startElem}\r\n        <div className={styles.settings}>\r\n          {props.me.isLeader && (\r\n            <div className={styles.lobbySettings}>\r\n              <div className={styles.label}>Lobby Settings:</div>\r\n              {publicSwitch}\r\n              {roundsElem}\r\n              {forceStartButton}\r\n            </div>\r\n          )}\r\n          <div className={styles.userSettings}>\r\n            <div className={styles.label}>User Settings:</div>\r\n            {spectatorSwitch}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default WaitingScreen;\r\n"]},"metadata":{},"sourceType":"module"}