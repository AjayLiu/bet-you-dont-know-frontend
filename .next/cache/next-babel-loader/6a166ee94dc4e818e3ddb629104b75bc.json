{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ajayl\\\\Desktop\\\\repos\\\\bet-you-dont-know\\\\client\\\\src\\\\components\\\\Room\\\\Room.tsx\";\nimport Layout from \"@components/Layout/Layout\";\nimport SocketContext from \"@context/SocketContext\";\nimport { useEffect, useState, useContext, useRef } from \"react\";\nimport swal from \"sweetalert\";\nimport ChatBox from \"./ChatBox/ChatBox\";\nimport GameScreen from \"./GameScreen/GameScreen\";\nimport WaitingScreen from \"./WaitingScreen/WaitingScreen\";\nimport styles from \"./Room.module.scss\";\nimport { useRouter } from \"next/router\";\nimport { Button } from \"react-bootstrap-buttons\";\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\nimport HowToPlay from \"./HowToPlay/HowToPlay\";\n\nconst Room = props => {\n  const socket = useContext(SocketContext);\n  const router = useRouter();\n  const {\n    0: lobby,\n    1: setLobby\n  } = useState();\n  const {\n    0: me,\n    1: setMe\n  } = useState();\n  useEffect(() => {\n    socket.on(\"updateLobby\", newLobby => {\n      if (newLobby === undefined) {\n        swal({\n          title: \"Error\",\n          text: \"Lobby has been closed\",\n          icon: \"error\"\n        }).then(() => {\n          // redirect to homepage\n          router.push(\"/\");\n        });\n      } else {\n        setLobby(newLobby);\n      }\n    });\n    socket.on(\"joinLobbyError\", message => {\n      swal({\n        title: \"Error\",\n        text: message,\n        icon: \"error\"\n      }).then(() => {\n        // redirect to homepage\n        router.push(\"/\");\n      });\n    });\n    return () => {\n      socket.emit(\"leaveLobby\");\n    };\n  }, []);\n  useEffect(() => {\n    setMe(lobby && lobby.users && lobby.users.find(user => user.socketID == socket.id));\n  }, [lobby]);\n  const {\n    0: usernameBox,\n    1: setUsernameBox\n  } = useState(\"\");\n\n  const setUsername = () => {\n    if (usernameBox.trim() == \"\") {\n      swal({\n        title: \"Invalid Username\",\n        text: \"Please enter a valid username.\",\n        icon: \"warning\"\n      });\n    } else {\n      socket.emit(\"setUsername\", me, usernameBox);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === \"Enter\") {\n      setUsername();\n    }\n  }; // alert the user when they try to leave the page\n\n\n  useEffect(() => {\n    if (false) {\n      window.addEventListener(\"beforeunload\", alertUser);\n      return () => {\n        window.removeEventListener(\"beforeunload\", alertUser);\n      };\n    }\n  }, []);\n\n  const alertUser = e => {\n    e.preventDefault();\n    e.returnValue = \"\";\n  };\n\n  const outputLinkRef = useRef(null);\n  const {\n    0: isCopied,\n    1: setIsCopied\n  } = useState(false);\n\n  const onClipboard = e => {\n    outputLinkRef.current.select();\n    document.execCommand(\"copy\");\n    e.target.focus();\n    setIsCopied(true);\n    setTimeout(() => {\n      setIsCopied(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    if (me === null || me === void 0 ? void 0 : me.amKicked) {\n      socket.emit(\"leaveLobby\");\n      router.push(\"/\");\n      swal(\"You've been kicked from the lobby.\");\n    }\n  }, [me === null || me === void 0 ? void 0 : me.amKicked]);\n\n  if (lobby && me) {\n    const namePickElem = me.hasSetName || /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.namePickContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.namePickLabel,\n        children: \"Enter your Nickname\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: styles.namePickInput,\n        value: usernameBox,\n        maxLength: 20,\n        onChange: e => {\n          setUsernameBox(e.target.value);\n        },\n        onKeyDown: e => handleKeyDown(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        btnStyle: \"primary\",\n        className: styles.namePickButton,\n        onClick: () => setUsername(),\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n\n    const screenElem = lobby.isInGame ? /*#__PURE__*/_jsxDEV(GameScreen, {\n      lobby: lobby,\n      me: me\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(WaitingScreen, {\n      lobby: lobby,\n      me: me\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this);\n\n    const linkShareElem = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.linkShareContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: styles.label,\n        children: \"Invite your friends by sharing:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.linkShareRow,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onFocus: e => e.target.select(),\n          className: styles.outputLink,\n          ref: outputLinkRef,\n          value: window.location.href,\n          readOnly: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.clipboardAndAlert,\n          children: [isCopied && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.copiedAlert,\n            children: \"Copied!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: styles.clipboardButton,\n            onClick: e => onClipboard(e),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"../../img/clipboard.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      title: lobby.name ? lobby.name : \"Loading...\",\n      openGraphTitle: \"Join Lobby | Bet You Don't Know\",\n      alertLeave: true,\n      children: [namePickElem, me.hasSetName && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.container,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.screen,\n            children: screenElem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.chat,\n            children: me.hasSetName && /*#__PURE__*/_jsxDEV(ChatBox, {\n              sender: me,\n              lobbyID: lobby.id,\n              chatList: lobby.chatMessages\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(HowToPlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this), linkShareElem]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 10\n  }, this);\n};\n\nexport default Room;","map":{"version":3,"sources":["C:/Users/ajayl/Desktop/repos/bet-you-dont-know/client/src/components/Room/Room.tsx"],"names":["Layout","SocketContext","useEffect","useState","useContext","useRef","swal","ChatBox","GameScreen","WaitingScreen","styles","useRouter","Button","HowToPlay","Room","props","socket","router","lobby","setLobby","me","setMe","on","newLobby","undefined","title","text","icon","then","push","message","emit","users","find","user","socketID","id","usernameBox","setUsernameBox","setUsername","trim","handleKeyDown","event","key","window","addEventListener","alertUser","removeEventListener","e","preventDefault","returnValue","outputLinkRef","isCopied","setIsCopied","onClipboard","current","select","document","execCommand","target","focus","setTimeout","amKicked","namePickElem","hasSetName","namePickContainer","namePickLabel","namePickInput","value","namePickButton","screenElem","isInGame","linkShareElem","linkShareContainer","label","linkShareRow","outputLink","location","href","clipboardAndAlert","copiedAlert","clipboardButton","name","container","screen","chat","chatMessages"],"mappings":"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","sourcesContent":["import Layout from \"@components/Layout/Layout\";\r\nimport SocketContext from \"@context/SocketContext\";\r\nimport { Lobby, User } from \"@shared/types\";\r\nimport { useEffect, useState, useContext, useRef } from \"react\";\r\nimport swal from \"sweetalert\";\r\nimport ChatBox from \"./ChatBox/ChatBox\";\r\nimport GameScreen from \"./GameScreen/GameScreen\";\r\nimport WaitingScreen from \"./WaitingScreen/WaitingScreen\";\r\nimport styles from \"./Room.module.scss\";\r\nimport { useRouter } from \"next/router\";\r\nimport { Button } from \"react-bootstrap-buttons\";\r\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\r\nimport HowToPlay from \"./HowToPlay/HowToPlay\";\r\ninterface Props {\r\n  slug: string;\r\n}\r\nconst Room: React.FC<Props> = (props) => {\r\n  const socket = useContext(SocketContext);\r\n  const router = useRouter();\r\n\r\n  const [lobby, setLobby] = useState<Lobby>();\r\n\r\n  const [me, setMe] = useState<User>();\r\n  useEffect(() => {\r\n    socket.on(\"updateLobby\", (newLobby: Lobby) => {\r\n      if (newLobby === undefined) {\r\n        swal({\r\n          title: \"Error\",\r\n          text: \"Lobby has been closed\",\r\n          icon: \"error\",\r\n        }).then(() => {\r\n          // redirect to homepage\r\n          router.push(\"/\");\r\n        });\r\n      } else {\r\n        setLobby(newLobby);\r\n      }\r\n    });\r\n    socket.on(\"joinLobbyError\", (message: string) => {\r\n      swal({\r\n        title: \"Error\",\r\n        text: message,\r\n        icon: \"error\",\r\n      }).then(() => {\r\n        // redirect to homepage\r\n        router.push(\"/\");\r\n      });\r\n    });\r\n    return () => {\r\n      socket.emit(\"leaveLobby\");\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setMe(\r\n      lobby &&\r\n        lobby.users &&\r\n        lobby.users.find((user) => user.socketID == socket.id)\r\n    );\r\n  }, [lobby]);\r\n\r\n  const [usernameBox, setUsernameBox] = useState(\"\");\r\n\r\n  const setUsername = () => {\r\n    if (usernameBox.trim() == \"\") {\r\n      swal({\r\n        title: \"Invalid Username\",\r\n        text: \"Please enter a valid username.\",\r\n        icon: \"warning\",\r\n      });\r\n    } else {\r\n      socket.emit(\"setUsername\", me, usernameBox);\r\n    }\r\n  };\r\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      setUsername();\r\n    }\r\n  };\r\n\r\n  // alert the user when they try to leave the page\r\n  useEffect(() => {\r\n    if (process.env.NODE_ENV === \"production\") {\r\n      window.addEventListener(\"beforeunload\", alertUser);\r\n      return () => {\r\n        window.removeEventListener(\"beforeunload\", alertUser);\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const alertUser = (e) => {\r\n    e.preventDefault();\r\n    e.returnValue = \"\";\r\n  };\r\n\r\n  const outputLinkRef = useRef(null);\r\n  const [isCopied, setIsCopied] = useState(false);\r\n  const onClipboard = (e) => {\r\n    outputLinkRef.current.select();\r\n    document.execCommand(\"copy\");\r\n    e.target.focus();\r\n    setIsCopied(true);\r\n    setTimeout(() => {\r\n      setIsCopied(false);\r\n    }, 3000);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (me?.amKicked) {\r\n      socket.emit(\"leaveLobby\");\r\n      router.push(\"/\");\r\n      swal(\"You've been kicked from the lobby.\");\r\n    }\r\n  }, [me?.amKicked]);\r\n\r\n  if (lobby && me) {\r\n    const namePickElem = me.hasSetName || (\r\n      <div className={styles.namePickContainer}>\r\n        <label className={styles.namePickLabel}>Enter your Nickname</label>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          className={styles.namePickInput}\r\n          value={usernameBox}\r\n          maxLength={20}\r\n          onChange={(e) => {\r\n            setUsernameBox(e.target.value);\r\n          }}\r\n          onKeyDown={(e) => handleKeyDown(e)}\r\n        />\r\n        <Button\r\n          btnStyle=\"primary\"\r\n          className={styles.namePickButton}\r\n          onClick={() => setUsername()}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      </div>\r\n    );\r\n    const screenElem = lobby.isInGame ? (\r\n      <GameScreen lobby={lobby} me={me} />\r\n    ) : (\r\n      <WaitingScreen lobby={lobby} me={me} />\r\n    );\r\n\r\n    const linkShareElem = (\r\n      <div className={styles.linkShareContainer}>\r\n        <label className={styles.label}>Invite your friends by sharing:</label>\r\n        <div className={styles.linkShareRow}>\r\n          <input\r\n            type=\"text\"\r\n            onFocus={(e) => e.target.select()}\r\n            className={styles.outputLink}\r\n            ref={outputLinkRef}\r\n            value={window.location.href}\r\n            readOnly\r\n          />\r\n          <div className={styles.clipboardAndAlert}>\r\n            {isCopied && <div className={styles.copiedAlert}>Copied!</div>}\r\n            <button\r\n              className={styles.clipboardButton}\r\n              onClick={(e) => onClipboard(e)}\r\n            >\r\n              <img src=\"../../img/clipboard.png\"></img>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <Layout\r\n        title={lobby.name ? lobby.name : \"Loading...\"}\r\n        openGraphTitle={\"Join Lobby | Bet You Don't Know\"}\r\n        alertLeave\r\n      >\r\n        {namePickElem}\r\n        {me.hasSetName && (\r\n          <>\r\n            <div className={styles.container}>\r\n              <div className={styles.screen}>{screenElem}</div>\r\n              <div className={styles.chat}>\r\n                {me.hasSetName && (\r\n                  <ChatBox\r\n                    sender={me}\r\n                    lobbyID={lobby.id}\r\n                    chatList={lobby.chatMessages}\r\n                  />\r\n                )}\r\n              </div>\r\n            </div>\r\n            <HowToPlay />\r\n            {linkShareElem}\r\n          </>\r\n        )}\r\n      </Layout>\r\n    );\r\n  }\r\n  return <div>Loading...</div>;\r\n};\r\n\r\nexport default Room;\r\n"]},"metadata":{},"sourceType":"module"}