{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\ajayl\\\\Desktop\\\\repos\\\\bet-you-dont-know\\\\client\\\\src\\\\components\\\\Room\\\\GameScreen\\\\Betting\\\\Betting.tsx\";\nimport SocketContext from \"@context/SocketContext\";\nimport { useState, useEffect, useContext } from \"react\";\nimport styles from \"./Betting.module.scss\";\nimport { Button } from \"react-bootstrap-buttons\";\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\nimport InlineCoin from \"@components/InlineCoin/InlineCoin\";\n\nconst Betting = props => {\n  var _props$lobby$game$cur;\n\n  const {\n    0: betValue,\n    1: setBetValue\n  } = useState(0);\n  const socket = useContext(SocketContext);\n  const amCurrentlyAnswering = ((_props$lobby$game$cur = props.lobby.game.currentAnswerer) === null || _props$lobby$game$cur === void 0 ? void 0 : _props$lobby$game$cur.socketID) === props.me.socketID; // when this player is mad broke (into debt), make sure they cant bet anything\n\n  useEffect(() => {\n    if (props.me.money < 0) {\n      setBetValue(0);\n    }\n  }, [props.me.money]);\n\n  const handleBetValueChange = e => {\n    try {\n      let num = parseInt(e.target.value); // clamp this value between 0 and this player's current balance\n\n      num = Math.max(0, Math.min(num, props.me.money));\n      setBetValue(num);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const submitBet = () => {\n    socket.emit(\"placeBet\", props.me, betValue);\n  }; // if i was not the one who answered\n\n\n  if (!amCurrentlyAnswering) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.bettingContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"bet\",\n        className: styles.betLabel,\n        children: [\"How much do you want to bet that\", \" \", props.lobby.game.currentAnswerer.displayName, \" answered incorrectly?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.currentBet,\n        children: [\"Your current bet: \", props.me.bet, \" \", /*#__PURE__*/_jsxDEV(InlineCoin, {\n          width: \"20px\",\n          sideMargins: \"0 5px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.betRow,\n        children: [/*#__PURE__*/_jsxDEV(InlineCoin, {\n          width: \"40px\",\n          sideMargins: \"0 10px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: 0,\n          max: props.me.money,\n          step: props.me.money / 10,\n          value: betValue,\n          onChange: e => {\n            handleBetValueChange(e);\n          },\n          className: styles.betInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.betsPresetsButtons,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            btnStyle: \"success\",\n            onClick: () => {\n              setBetValue(0);\n            },\n            children: \"Zero\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            btnStyle: \"success\",\n            onClick: () => {\n              setBetValue(Math.max(0, props.me.money / 2));\n            },\n            children: \"Half\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            btnStyle: \"success\",\n            onClick: () => {\n              setBetValue(Math.max(0, props.me.money));\n            },\n            children: \"All In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        btnStyle: \"primary\",\n        onClick: () => submitBet(),\n        className: styles.confirmButton,\n        children: \"Confirm Bet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Other players are placing bets if you answered the question incorrectly.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n};\n\nexport default Betting;","map":{"version":3,"sources":["C:/Users/ajayl/Desktop/repos/bet-you-dont-know/client/src/components/Room/GameScreen/Betting/Betting.tsx"],"names":["SocketContext","useState","useEffect","useContext","styles","Button","InlineCoin","Betting","props","betValue","setBetValue","socket","amCurrentlyAnswering","lobby","game","currentAnswerer","socketID","me","money","handleBetValueChange","e","num","parseInt","target","value","Math","max","min","err","console","error","submitBet","emit","bettingContainer","betLabel","displayName","currentBet","bet","betRow","betInput","betsPresetsButtons","confirmButton"],"mappings":"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","sourcesContent":["import SocketContext from \"@context/SocketContext\";\r\nimport { Lobby, User } from \"@shared/types\";\r\nimport { useState, useEffect, useContext } from \"react\";\r\nimport styles from \"./Betting.module.scss\";\r\nimport { Button } from \"react-bootstrap-buttons\";\r\nimport \"react-bootstrap-buttons/dist/react-bootstrap-buttons.css\";\r\nimport InlineCoin from \"@components/InlineCoin/InlineCoin\";\r\n\r\ninterface Props {\r\n  lobby: Lobby;\r\n  me: User;\r\n}\r\n\r\nconst Betting: React.FC<Props> = (props) => {\r\n  const [betValue, setBetValue] = useState(0);\r\n  const socket = useContext(SocketContext);\r\n\r\n  const amCurrentlyAnswering =\r\n    props.lobby.game.currentAnswerer?.socketID === props.me.socketID;\r\n\r\n  // when this player is mad broke (into debt), make sure they cant bet anything\r\n  useEffect(() => {\r\n    if (props.me.money < 0) {\r\n      setBetValue(0);\r\n    }\r\n  }, [props.me.money]);\r\n  const handleBetValueChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    try {\r\n      let num = parseInt(e.target.value);\r\n\r\n      // clamp this value between 0 and this player's current balance\r\n      num = Math.max(0, Math.min(num, props.me.money));\r\n\r\n      setBetValue(num);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n  const submitBet = () => {\r\n    socket.emit(\"placeBet\", props.me, betValue);\r\n  };\r\n\r\n  // if i was not the one who answered\r\n  if (!amCurrentlyAnswering) {\r\n    return (\r\n      <div className={styles.bettingContainer}>\r\n        <label htmlFor=\"bet\" className={styles.betLabel}>\r\n          How much do you want to bet that{\" \"}\r\n          {props.lobby.game.currentAnswerer.displayName} answered incorrectly?\r\n        </label>\r\n        <div className={styles.currentBet}>\r\n          Your current bet: {props.me.bet}{\" \"}\r\n          <InlineCoin width=\"20px\" sideMargins=\"0 5px\" />\r\n        </div>\r\n        <div className={styles.betRow}>\r\n          <InlineCoin width=\"40px\" sideMargins=\"0 10px\" />\r\n          <input\r\n            type=\"number\"\r\n            min={0}\r\n            max={props.me.money}\r\n            step={props.me.money / 10}\r\n            value={betValue}\r\n            onChange={(e) => {\r\n              handleBetValueChange(e);\r\n            }}\r\n            className={styles.betInput}\r\n          ></input>\r\n          <div className={styles.betsPresetsButtons}>\r\n            <Button\r\n              btnStyle=\"success\"\r\n              onClick={() => {\r\n                setBetValue(0);\r\n              }}\r\n            >\r\n              Zero\r\n            </Button>\r\n            <Button\r\n              btnStyle=\"success\"\r\n              onClick={() => {\r\n                setBetValue(Math.max(0, props.me.money / 2));\r\n              }}\r\n            >\r\n              Half\r\n            </Button>\r\n            <Button\r\n              btnStyle=\"success\"\r\n              onClick={() => {\r\n                setBetValue(Math.max(0, props.me.money));\r\n              }}\r\n            >\r\n              All In\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <Button\r\n          btnStyle=\"primary\"\r\n          onClick={() => submitBet()}\r\n          className={styles.confirmButton}\r\n        >\r\n          Confirm Bet\r\n        </Button>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div>\r\n        Other players are placing bets if you answered the question incorrectly.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Betting;\r\n"]},"metadata":{},"sourceType":"module"}